@model ExamManagement.Models.Cours
@{
    ViewBag.Title = "Edit Course";
    Layout = "~/Views/Shared/Adminsidebar.cshtml"; // Use the same layout for consistency
}

<h2 style="color: transparent">Edit Course</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div>
        @Html.ActionLink("Back", "Index", "Course", null, new { @class = "btn btn-secondary" })
    </div>
    <div class="container-edit">
        <div class="form-horizontal">
            <h4>Course</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.courseid)

            <div class="form-group">
                @Html.LabelFor(model => model.coursename, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.coursename, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.coursename, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descriptions, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descriptions, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="text-align:center">
                    <input type="submit" value="Save" class="btn btnscs" />
                </div>
            </div>
        </div>
    </div>


}
@if (TempData["SuccessMessage"] != null)
{
    <div id="messageBox">@TempData["SuccessMessage"]</div>
    <script>
     window.onload = function() {
         var messageBox = document.getElementById("messageBox");
         if (messageBox) {
             messageBox.style.display = "block"; // Show the message box

             setTimeout(function() {
                 window.location.href = '@Url.Action("Edit", "Course")'; // Redirect after 2 seconds
             }, 2000);
         }
     };
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="messageBox">@TempData["ErrorMessage"]</div>
    <script>
         window.onload = function () {
             var messageBox = document.getElementById("messageBox");
             if (messageBox) {
                 messageBox.style.display = "block"; // Show the message box

                 setTimeout(function () {
                     messageBox.style.display = "none"; // Hide error message after 2 seconds
                 }, 2000);
             }
         };
    </script>
}

<style>
    .container-edit {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 50vh; /* Adjusted for a better visual fit */
    }

    .btnscs {
        background-color: rebeccapurple;
        color: white;
    }
</style>