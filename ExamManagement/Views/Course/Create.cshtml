@model ExamManagement.Models.Cours
@{
    ViewBag.Title = "Create Course";
    Layout = "~/Views/Shared/Adminsidebar.cshtml"; // Ensure you have a layout for the sidebar
}

<h2 style="color:transparent">Create Course</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <style>
        .btnscs {
            background-color: rebeccapurple;
            color: white;
        }

        /* Centering the form */
        .centered-form-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 50vh; /* Full height */
        }

        .centered-form {
            width: 50%;
            padding: 20px;
            border-radius: 8px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        #messageBox {
            position: fixed;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            background-color: rgba(0, 128, 0, 0.8); /* Green background with transparency */
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            z-index: 1000; /* Ensure the message box is on top */
            font-size: 20px;
            display: none; /* Initially hidden */
        }
    </style>

    <div>
        @Html.ActionLink("Back", "Index", "Course", null, new { @class = "btn btn-secondary" })
    </div>
    <div class="centered-form-container">
        <div class="form-horizontal centered-form">
            <br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.courseid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.courseid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.courseid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.coursename, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.coursename, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.coursename, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descriptions, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descriptions, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btnscs" />
                </div>
            </div>
        </div>
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div id="messageBox">@TempData["SuccessMessage"]</div>
    <script>
     window.onload = function() {
         var messageBox = document.getElementById("messageBox");
         if (messageBox) {
             messageBox.style.display = "block"; // Show the message box

             setTimeout(function() {
                 window.location.href = '@Url.Action("Admindash", "AdminDashboard")'; // Redirect after 2 seconds
             }, 2000);
         }
     };
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="messageBox">@TempData["ErrorMessage"]</div>
    <script>
        window.onload = function () {
            var messageBox = document.getElementById("messageBox");
            if (messageBox) {
                messageBox.style.display = "block"; // Show the message box

                setTimeout(function () {
                    messageBox.style.display = "none"; // Hide error message after 2 seconds
                }, 2000);
            }
        };
    </script>
}

