@model ExamManagement.Models.Question

@{
    ViewBag.Title = "Edit Question";
    Layout = "~/Views/Shared/Adminsidebar.cshtml"; // Include layout if required
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Question</title>

    <style>
        .container-edit {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 50vh;
        }

        .form-horizontal {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 2px 1px 21px -9px rgba(0, 0, 0, 0.38);
            width: 500px;
        }

        h4 {
            text-align: center;
            font-weight: 600;
        }

        .btnscs {
            background-color: rebeccapurple;
            color: white;
            width: 100%;
            border-radius: 5px;
        }

        .text-danger {
            margin-top: 5px;
        }
    </style>
</head>

<body>
    <br />
    <br />
    <br />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="back-button">
            @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
        </div>
        <div class="container-edit">
            <div class="form-horizontal">
                <h4>Question</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.QuestionID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Examid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Examid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Examid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Courseid, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Courseid, (SelectList)ViewBag.CourseList, "Select a Course", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Courseid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OptionA, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OptionB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OptionC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OptionD, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CorrectOption, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CorrectOption, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CorrectOption, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10" style="text-align:center">
                        <input type="submit" value="Save" class="btn btnscs" />
                    </div>
                </div>
            </div>
        </div>


    }

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
</body>
</html>